// Generate svg with `dot images/ops.dot -Tsvg -O`
digraph {
    graph [fontname = "courier"];
    node [fontname = "courier"; shape="box"];
    edge [fontname = "courier"];

    // primitive
    blockwise [style="filled"; fillcolor="#dcbeff";];
    rechunk [style="filled"; fillcolor="#aaffc3";];

    // core
    elemwise [style="filled"; fillcolor="#ffd8b1";];
    map_blocks [style="filled"; fillcolor="#ffd8b1";];
    map_selection [style="filled"; fillcolor="#ffd8b1";];
    reduction [style="filled"; fillcolor="#ffd8b1";];
    arg_reduction [style="filled"; fillcolor="#ffd8b1";];

    elemwise -> blockwise;
    map_blocks -> blockwise;
    map_selection -> blockwise;
    reduction -> blockwise;
    arg_reduction -> reduction;

    // array API

    // array object
    __getitem__ -> map_selection

    // elementwise
    add -> elemwise
    negative -> elemwise

    // linear algebra
    matmul -> blockwise;
    matmul -> reduction;

    // manipulation
    concat -> blockwise;
    reshape -> rechunk;
    reshape -> blockwise;
    squeeze -> map_blocks;

    // searching
    argmax -> arg_reduction;

    // statistical
    sum -> reduction;

    // utility
    all -> reduction;

    {
        rank = min;

        // fix horizontal placing with invisible edges
        edge[style=invis];
        add -> negative -> squeeze -> __getitem__ -> concat -> matmul -> sum -> all -> argmax -> reshape;
        rankdir = LR;
    }
    {
        rank = same;
        elemwise; map_blocks; map_selection; reduction;
    }
    {
        rank = max;
        blockwise; rechunk;
    }

}
